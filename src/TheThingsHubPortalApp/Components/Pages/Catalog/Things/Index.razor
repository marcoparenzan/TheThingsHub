@page "/catalog/things"
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer

@inject CatalogService catalogService
@inject NavigationManager nm

<PageTitle>Things</PageTitle>

<h1>Hello, Things!</h1>

<MudDataGrid Items="@things">
    <Columns>
        <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Description)" Sortable="true" />

        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudStack Row>
                    <MudButton @onclick="()=>EditAsync(context)" Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Secondary">Edit</MudButton>
                    <MudButton @onclick="()=>DeleteAsync(context)" Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Warning">Delete</MudButton>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

<MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="CreateAsync">Create</MudButton>

@code {
    IQueryable<ThingItem> things;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            things = await catalogService.ThingsAsync();
            StateHasChanged();
        }
    }

    async Task EditAsync(CellContext<ThingItem> context)
    {
        nm.NavigateTo($"catalog/things/edit/{context.Item.Id}");
    }

    async Task DeleteAsync(CellContext<ThingItem> context)
    {
        nm.NavigateTo($"catalog/things/delete/{context.Item.Id}");
    }


    async Task CreateAsync()
    {
        nm.NavigateTo("/catalog/things/create");    
    }
}